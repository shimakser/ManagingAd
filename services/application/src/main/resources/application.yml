server:
  port: ${PORT}
  servlet:
    context-path: /managingad
  ssl:
  # keytool -genkeypair -dname "CN=test, OU=test, O=test, L=test, S=test, C=test" -alias managingad -keyalg RSA -keysize 2048 -storetype PKCS12 -keystore managingad.p12 -keypass password -storepass password -validity 3650
    enabled: true
    key-store-type: PKCS12
    key-store: classpath:keystore/managingad.p12
    key-store-password: password
    key-alias: managingad

spring:
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver

  flyway:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${DB}
    user: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    locations: classpath:db/migration

  jpa:
    open-in-view: true

  data:
    mongodb:
      host: ${MONGO_HOST}
      port: ${MONGO_PORT}
      database: ${DB}

  kafka:
    bootstrap-servers: ${KAFKA_HOST}:${KAFKA_PORT}
    topic:
      registration-topic: registration-topic
      request-topic: request-topic
      requestreply-topic: requestreply-topic
    consumer:
      registration-group: registration-group
      requestreply-group: requestreply-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties.spring.json.trusted.packages: by.shimakser.dto;
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  cache:
    collection-name: Currency
    cache-name: currency

  security:
    oauth2:
      client:
        provider:
          keycloak:
            username: ${KEYCLOAK_USERNAME}
            password: ${KEYCLOAK_PASSWORD}
            server: ${KEYCLOAK_SERVER}

            token-uri: ${KEYCLOAK_SERVER}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token
            authorization-uri: ${KEYCLOAK_SERVER}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/auth
            user-info-uri: ${KEYCLOAK_SERVER}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/userinfo
            jwk-set-uri: ${KEYCLOAK_SERVER}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs
            user-name-attribute: preferred_username
        registration:
          managingad-app:
            provider: keycloak
            client-id: ${KEYCLOAK_CLIENT}
            client-secret: ${KEYCLOAK_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/log

feign:
  application-url: ${CURRENCIES_HOST}:${CURRENCIES_PORT}/currencies