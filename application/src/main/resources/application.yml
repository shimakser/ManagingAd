server:
  port: 8080
  servlet:
    context-path: /managingad

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/ManagingAd
    username: postgres
    password: root
    driver-class-name: org.postgresql.Driver

  data:
    mongodb:
      host: localhost
      port: 27017
      database: ManagingAd

  jpa:
    open-in-view: true

  kafka:
    bootstrap-servers: localhost:29092
    topic:
      registration-topic: registration-topic
      request-topic: request-topic
      requestreply-topic: requestreply-topic
    consumer:
      registration-group: registration-group
      requestreply-group: requestreply-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties.spring.json.trusted.packages: by.shimakser.dto;
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  
  jooq:
    sql-dialect: postgres

  cache:
    collection-name: Currency
    cache-name: currency

feign:
  application-url: ${CURRENCIES_HOST}:${CURRENCIES_PORT}/currencies

jwt:
  token:
    secret: shimakser
    expired: 3600000